@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Layout/_header.cshtml";
    List<Meal> meal_list = TempData["mealList"] as List<Meal>;
    List<Ordertable> order_list = TempData["orderList"] as List<Ordertable>;
    List<Categorymeal> category = TempData["category"] as List<Categorymeal>;
    int odHistoryID = -1;
    int tableID = int.Parse(TempData["tableID"].ToString());
}

<main id="main" style="margin-top: 5em;">
    <!-- ======= About Section ======= -->
    <section id="about" class="about">
        <div class="container" data-aos="fade-up">
            <div class="section-title" style="padding-bottom: 0;">
                <div class="btns">
                    <a class="btn-menu animated fadeInUp scrollto add-order" asp-controller="Staff" asp-action="Index">
                        Go Back
                    </a>
                </div>
                <hr />
            </div>
            <div class="row">
                <div class="section-title col-lg-8 col-md-6">
                    <p>Table Detail</p>
                </div>
            </div>
        </div>
        
    </section><!-- End About Section -->
    <!-- ======= Menu Section ======= -->
    <section id="menu" class="menu section-bg">
        <div class="container" data-aos="fade-up">
            <div id="menu-container" class="row menu-container" data-aos="fade-up" data-aos-delay="200">

                @if(order_list != null)
                {
                    @foreach(Ordertable od in order_list)
                    {
                        odHistoryID = int.Parse(@od.OdHistoryId.ToString());
                        tableID = int.Parse(@od.TableId.ToString());
                        <div class="col-lg-6 menu-item meal-item filter-@od.Meal.Cate.Name">
                            <img src="@od.Meal.Img" class="menu-img" alt="">
                            <div class="menu-content">
                                <input type="hidden" name="id" value="@od.MealId"/>
                                <a href="#">@od.Meal.Name (@od.Quantity)</a><span class="price">$@od.Price</span>
                            </div>
                            <div class="menu-ingredients">
                                @od.Meal.Intro
                                <div>
                                    <a asp-action="DeleteOrderMeal" asp-route-tableID="@od.TableId" asp-route-mealID="@od.MealId" asp-route-odHistory="@odHistoryID">
                                        <img src="~/assets/img/svg_icon/bin-svgrepo-com.svg" class="svg-icon" alt="Delete" style="width:1.5rem;">
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                }

            </div>

        </div>
        <section>

            <div class="container" data-aos="fade-up">
                <div class="section-title">
                    <h2>Total</h2><span id="total-price"></span>
                    <form asp-action="payMeal" asp-controller="Staff" asp-route-orderHistoryID="@odHistoryID" asp-route-tableID="@tableID">
                        <div class="btns">
                            <button class="btn-menu animated fadeInUp scrollto add-order">Pay</button>
                        </div>
                    </form>
                    <hr />
                </div>
            </div>
            
        </section>
        
    </section><!-- End Menu Section -->
    
</main><!-- End #main -->
<section id="menu" class="menu section-bg">
    <div class="container" data-aos="fade-up">

        <div class="section-title row">
            <div class=" col-lg-8 col-md-6">
                <h2>Menu</h2>
                <p>Check Our Tasty Menu</p>
            </div>
            <div class="col-lg-4 col-md-6 search-box">
                <form action="" method="post">
                    <input type="text" name="search"><input type="submit" value="Search">
                </form>

            </div>
        </div>
        
        <div class="row" data-aos="fade-up" data-aos-delay="100">
            <div class="col-lg-12 d-flex justify-content-center">
                <ul id="menu-flters">
                    <li data-filter="*" class="filter-active">All</li>
                    @if (category != null)
                    {
                        @foreach (var item in category)
                        {
                            <li data-filter=".filter-@item.Name.ToLower()">@item.Name</li>
                        }
                    }
                </ul>
            </div>
        </div>

        <div class="row menu-container" data-aos="fade-up" data-aos-delay="200">
            @if(meal_list != null)
            {
                @for(int i=0; i < meal_list.Count(); i++)
                {
                    <div class="col-lg-6 menu-item filter-@meal_list[i].Cate.Name.ToLower()">
                        <div>
                            <input class="form-check-input" type="checkbox" id="checkbox@{@i}" value="JS Lobster Bisque" aria-label="...">
                        </div>
                        <img src="@meal_list[i].Img" class="menu-img" alt="">
                        
                        <div class="menu-content">
                            <input type="hidden" name="mealID" id="mealID" value="@meal_list[i].Id" />
                            <input type="hidden" name="tableID" value="@TempData["tableID"]" id="tableID" />
                            <input type="hidden" name="odhistoryID" value="@odHistoryID" id="odhistoryID" />
                            <input type="hidden" name="price_each_item" value="@meal_list[i].Price" id="price_each_item" />
                            <a href="#">@meal_list[i].Name</a><span>$@meal_list[i].Price</span>
                        </div>
                        <div class="menu-ingredients">
                            @meal_list[i].Intro
                        </div>
                    </div>
                }
            }

        </div>
        <hr />
        @* <form asp-action="orderMeal" asp-controller="Staff" method="post"> *@
            <!-- Box to display selected items -->
            <div class="selected-items-box mt-4">
                <h3>Selected Items:</h3>
                <div id="selected-items-container" class="row"></div>
            </div>
        
            <input type="hidden" name="tableID" value="@TempData["tableID"]" id="tableID" />
            <div class="btns">
                <button id="btnClick" class="btn-menu animated fadeInUp scrollto add-order">Add Order</button>
            </div>
        @* </form> *@

    </div>
</section>
 @* <button id="retrieve-button" class="btn btn-primary">Retrieve Selected Items</button>  *@
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let totalPrice = 0;

        
        const mainElement = document.getElementById('main');
        const priceElements = mainElement.querySelectorAll('.meal-item .menu-content .price');

        priceElements.forEach(function (priceElement) {
            const priceText = priceElement.textContent.replace('$', '');
            const price = parseFloat(priceText);

            if (!isNaN(price)) {
                totalPrice += price;
            }
        });

        const totalPriceElement = document.getElementById('total-price');
        totalPriceElement.textContent = `$${totalPrice.toFixed(2)}`;
    });

</script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const checkboxes = document.querySelectorAll('.form-check-input');
        const selectedItemsContainer = document.getElementById('selected-items-container');

        // Object to store selected items and their quantities
        const selectedItems = {};

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                updateSelectedItems();
            });
        });

        function updateSelectedItems() {
            selectedItemsContainer.innerHTML = '';

            checkboxes.forEach(checkbox => {
                if (checkbox.checked) {
                    const menuItem = checkbox.closest('.menu-item');
                    const itemName = menuItem.querySelector('.menu-content a').textContent;
                    const itemId = menuItem.querySelector('input[name="mealID"]').value;
                    const tableID = menuItem.querySelector('#tableID').value;
                    const odhistoryID = menuItem.querySelector('#odhistoryID').value;
                    const priceEachItem = menuItem.querySelector('#price_each_item').value;
                    var currentdate = new Date(); 
                    // If the item is not already selected, add it with a default quantity of 1
                    if (!selectedItems[itemName]) {
                        selectedItems[itemName] = {
                            MealId: itemId,
                            element: menuItem.cloneNode(true),
                            quantity: 1,
                            tableID: tableID,
                            odhistoryID: odhistoryID,
                            price: priceEachItem
                        };
                    }

                    // Create a clone of the menu item to display in the selected items container
                    const clonedItem = selectedItems[itemName].element.cloneNode(true);
                    const clonedCheckbox = clonedItem.querySelector('.form-check-input');
                    if (clonedCheckbox) clonedCheckbox.parentNode.removeChild(clonedCheckbox);

                    // Add quantity controls to the cloned item
                    const quantityControl = document.createElement('div');
                    quantityControl.className = 'quantity-control';
                    quantityControl.innerHTML = `
                        <span class="btn decrement-btn">-</span>
                        <span class="quantity">${selectedItems[itemName].quantity}</span>
                        <span class="btn increment-btn">+</span>
                    `;
                    clonedItem.appendChild(quantityControl);
                    selectedItemsContainer.appendChild(clonedItem);

                    const decrementBtn = clonedItem.querySelector('.decrement-btn');
                    const incrementBtn = clonedItem.querySelector('.increment-btn');
                    const quantitySpan = clonedItem.querySelector('.quantity');

                    decrementBtn.addEventListener('click', function (event) {
                        event.preventDefault(); // Ngăn chặn hành vi gửi biểu mẫu mặc định
                        let quantity = selectedItems[itemName].quantity;
                        if (quantity > 1) {
                            quantitySpan.textContent = --quantity;
                            selectedItems[itemName].quantity = quantity;
                        }
                    });

                    incrementBtn.addEventListener('click', function (event) {
                        event.preventDefault(); // Ngăn chặn hành vi gửi biểu mẫu mặc định
                        let quantity = selectedItems[itemName].quantity;
                        quantitySpan.textContent = ++quantity;
                        selectedItems[itemName].quantity = quantity;
                    });
                }
            });

            // Remove items from the selectedItems object if they are unchecked
            Object.keys(selectedItems).forEach(itemName => {
                if (![...checkboxes].find(checkbox => checkbox.checked && checkbox.closest('.menu-item').querySelector('.menu-content a').textContent === itemName)) {
                    delete selectedItems[itemName];
                }
            });
        }

        function getSelectedItems() {
            const items = [];
            Object.keys(selectedItems).forEach(itemName => {
                var price = selectedItems[itemName].quantity * selectedItems[itemName].price;
                items.push({
                    MealId: selectedItems[itemName].MealId,
                    name: itemName,
                    quantity: selectedItems[itemName].quantity,
                    tableID: selectedItems[itemName].tableID,
                    odhistoryID: selectedItems[itemName].odhistoryID,
                    price: price
                });
            });
            return items;
        }

        $('#btnClick').click(function (e) {
            e.preventDefault();
            const selectedItemsList = getSelectedItems();
            $.ajax({
                url: '@Url.Action("OrderMeal", "Staff")',
                type: 'post', 
                contentType: 'application/json',
                data: JSON.stringify(selectedItemsList),
                success: function () {
                    alert("Order food successfully!");
                    location.reload();
                },
                error: function (errMsg) {
                    alert("Error: " + errMsg.responseText);
                }
            });
        });

    });

</script>

